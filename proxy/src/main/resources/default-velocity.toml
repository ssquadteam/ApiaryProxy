# Config version. Do not change this.
config-version = "2.7"

# What port should the proxy be bound to? By default, we'll bind to all addresses on port 25565.
bind = "0.0.0.0:25565"

# What should be the MOTD? This gets displayed when the player adds your server to
# their server list. Only MiniMessage format is accepted.
motd = "<#ff3a4c>A Velocity Server"

# What should we display for the maximum number of players? (Velocity does not support a cap
# on the number of players online).
show-max-players = 500

# Should we authenticate players with Mojang? By default, this is on.
online-mode = true

# Whether chat signing should be enforced. If disabled, backend servers MUST disable chat signing.
enforce-chat-signing = true

# If false, disables processing of header and footer translations for better performance.
translate-header-footer = true

# If true, a message is pasted in console displaying whether a user joined on an unsupported version.
# This corresponds with the "minimum-version" and "modern-forwarding-needs-new-client" values.
log-minimum-version = false

# Modify the minimum version, so the proxy blocks out users on the wrong version, rather than the backend server.
# Modern forwarding supports 1.13, at minimum. Set this to 1.13 or above if you are using modern forwarding.
minimum-version = "1.7.2"

# Should the proxy enforce the new public key security standard? By default, this is on.
force-key-authentication = true

# If client's ISP/AS sent from this proxy is different from the one from Mojang's
# authentication server, the player is kicked. This disallows some VPN and proxy
# connections but is a weak form of protection.
prevent-client-proxy-connections = false

# Should we forward IP addresses and other data to backend servers?
# Available options:
# - "none":        No forwarding will be done. All players will appear to be connecting
#                  from the proxy and will have offline-mode UUIDs.
# - "legacy":      Forward player IPs and UUIDs in a BungeeCord-compatible format. Use this
#                  if you run servers using Minecraft 1.12 or lower.
# - "bungeeguard": Forward player IPs and UUIDs in a format supported by the BungeeGuard
#                  plugin. Use this if you run servers using Minecraft 1.12 or lower, and are
#                  unable to implement network level firewalling (on a shared host).
# - "modern":      Forward player IPs and UUIDs as part of the login process using
#                  Velocity's native forwarding. Only applicable for Minecraft 1.13 or higher.
player-info-forwarding-mode = "none"

# If you are using modern or BungeeGuard IP forwarding, configure a file that contains a unique secret here.
# The file is expected to be UTF-8 encoded and not empty.
forwarding-secret-file = "forwarding.secret"

# Announce whether your server supports Forge. If you run a modded server, we
# suggest turning this on.
#
# If your network runs one modpack consistently, consider using ping-passthrough = "mods"
# instead for a nicer display in the server list.
announce-forge = false

# If true, disables handling of inbound Forge handshakes.
disable-forge = false

# If enabled (default is false), and the proxy is in online mode, Velocity will kick
# any existing player who is online if a duplicate connection attempt is made.
kick-existing-players = false

# Should Velocity pass server list ping requests to a backend server?
# Available options:
# - "disabled":    No pass-through will be done. The velocity.toml and server-icon.png
#                  will determine the initial server list ping response.
# - "mods":        Passes only the mod list from your backend server into the response.
#                  The first server in your try list (or forced host) with a mod list will be
#                  used. If no backend servers can be contacted, Velocity won't display any
#                  mod information.
# - "description": Uses the description and mod list from the backend server. The first
#                  server in the try (or forced host) list that responds is used for the
#                  description and mod list.
# - "all":         Uses the backend server's response as the proxy response. The Velocity
#                  configuration is used if no servers could be contacted.
ping-passthrough = "disabled"

# If not enabled (default is true) player IP addresses will be replaced by <ip address withheld> in logs.
enable-player-address-logging = true

# If false, disables logging for offline player connections.
log-offline-connections = true

# Enables logging of player connections and by default, still displays
# player disconnections and initial connections.
log-player-connections = true

# Enables logging of player disconnection and by default, still displays
# player connections and initial connections.
log-player-disconnections = true

[commands]
# Users often prefer to outright unregister the command instead of setting
# the command's permission to false for users, as console overrides that priviledge.
# We particularly exclude raw /velocity {ALL}, callback, and shutdown
# to maintain functionality or because (for example) "/velocity uptime" does not
# overlap with any other known commands in Velocity and should never be of concern.
#
# If you have aliases that override any of the commands on this list, those
# plugin-based aliases (such as one overriding "/glist") will override that
# or any other command, regardless if the command is set to "true" below.
#
# The values below are if you have no overrides for stated
# commands and wish to fully strip them from your proxy.

# Velocity Command Registration
server-enabled = true
glist-enabled = true
send-enabled = true

# ApiaryProxy Command Registration
alert-enabled = true
alertraw-enabled = true
find-enabled = true
hub-enabled = true
ping-enabled = true
plist-enabled = true
showall-enabled = true

# Whether to use the default `/server` output, or whether to override it with the `velocity.command.server.usage` key.
override-server-command-usage = false

[servers]
# Configure your servers here. Each key represents the server's name, and the value
# represents the IP address of the server to connect to.
lobby = "127.0.0.1:30066"
factions = "127.0.0.1:30067"
minigames = "127.0.0.1:30068"

# If you need a different forwarding mode, specify as shown:
modern = { address = "127.0.0.1:30068", forwarding-mode = "MODERN" }

# In what order, we should try servers when a player logs in or is kicked from a server.
try = [
    "lobby"
]

# Sends you to the least populated fallback server, instead of the first available fallback server.
# Keep this false if you only have one fallback server.
enable-dynamic-fallbacks = false

# Instead, sends the user to the most populated fallback server, rather than the least populated fallback server.
# Requires enable-dynamic-fallbacks as true to function. Keep this false if you want users to be sent to the least
# populated server.
enable-most-populated-fallbacks = false

[forced-hosts]
# Configure your forced hosts here.
"lobby.example.com" = [
    "lobby"
]
"factions.example.com" = [
    "factions"
]
"minigames.example.com" = [
    "minigames"
]

[advanced]
# How large a Minecraft packet has to be before we compress it. Setting this to zero will
# compress all packets, and setting it to -1 will disable compression entirely.
compression-threshold = 256

# How much compression should be done (from 0-9). The default is -1, which uses the
# default level of 6.
compression-level = -1

# How fast (in milliseconds) are clients allowed to connect after the last connection? By
# default, this is three seconds. Disable this by setting this to 0.
login-ratelimit = 3000

# Specify a custom timeout for connection timeouts here. The default is five seconds.
connection-timeout = 5000

# Specify a read timeout for connections here. The default is 30 seconds.
read-timeout = 30000

# Enables compatibility with HAProxy's PROXY protocol. If you don't know what this is for, then
# don't enable it.
haproxy-protocol = false

# Enables TCP fast open support on the proxy. Requires the proxy to run on Linux.
tcp-fast-open = false

# Enables BungeeCord plugin messaging channel support on Velocity.
bungee-plugin-message-channel = true

# Shows ping requests to the proxy from clients.
show-ping-requests = false

# By default, Velocity will attempt to gracefully handle situations where the user unexpectedly
# loses connection to the server without an explicit disconnect message by attempting to fall the
# user back, except in the case of read timeouts. BungeeCord will disconnect the user instead. You
# can disable this setting to use the BungeeCord behavior.
failover-on-unexpected-server-disconnect = true

# Declares the proxy commands to 1.13+ clients.
announce-proxy-commands = true

# Enables the logging of commands.
log-command-executions = false

# Allows players transferred from other hosts via the
# Transfer packet (Minecraft 1.20.5) to be received.
accepts-transfers = false

# Enables the execution of illegal characters in chat and only allows
# or denies illegal characters that are executed through the proxy.
allow-illegal-characters-in-chat = false

# Modifies the server brand that displays in your debug menu.
# Available options:
# - "{protocol-min}":          Returns the lowest compatible version from the
#                              minimum-version key within this configuration.
# - "{protocol-max}":          Returns the highest compatible version from the
#                              ProtocolVersion class within Velocity's code.
# - "{protocol}":              Returns the lowest, highest compatible version from the
#                              ProtocolVersion class within Velocity's code.
#                              E.g., if a protocol shares two versions, it will output
#                              the lowest version from the list.
# - "{backend-brand}"          Returns the brand of the server you are connected to. E.g.,
#                              "Paper," "Pufferfish," or "Purpur" would be valid brands.
# - "{backend-brand-custom}":  Returns your custom proxy brand defined as "custom-brand-backend" in this
#                              configuration to maintain brand reformatting for internal pingers. To use
#                              this configuration option, replace "{backend-brand}" with "{backend-brand-custom}."
# - "{proxy-brand}":           Returns the proxy brand from Velocity, which is
#                              used to identify the name of the project or proxy.
# - "{proxy-brand-custom}":    Returns your custom proxy brand defined as "custom-brand-proxy" in this
#                              configuration to maintain brand reformatting from external pingers. To use
#                              this configuration option, replace "{proxy-brand}" with "{proxy-brand-custom}."
# - "{proxy-version}":         Returns the version of your proxy and git-hash that your
#                              proxy is currently on. Build numbers in regular Velocity
#                              would be shown with this specific assignment.
# - "{proxy-vendor}":          Returns the group or association (vendor) of your proxy
#                              that by default would display "Velocity Contributors."
server-brand = "{backend-brand} ({proxy-brand})"

# Modifies the brand and server version that displays in the multiplayer menu and status pingers.
# Available options:
# - "{protocol-min}":          Returns the lowest compatible version from the
#                              minimum-version key within this configuration.
# - "{protocol-max}":          Returns the highest compatible version from the
#                              ProtocolVersion class within Velocity's code.
# - "{protocol}":              Returns the lowest, highest compatible version from the
#                              ProtocolVersion class within Velocity's code.
#                              E.g., if a protocol shares two versions, it will output
#                              the lowest version from the list.
# - "{proxy-brand}":           Returns the proxy brand from Velocity's Implementation-Title,
#                              which is used to identify the name of the project or proxy.
# - "{proxy-brand-custom}":    Returns your custom proxy brand defined as "custom-brand-proxy" in this
#                              configuration to maintain brand reformatting from external pingers. To use
#                              this configuration option, replace "{proxy-brand}" with "{proxy-brand-custom}."
# - "{proxy-version}":         Returns the version of your proxy and git-hash that your
#                              proxy is currently on. Build numbers in regular Velocity
#                              would be shown with this specific assignment.
# - "{proxy-vendor}":          Returns the group or association (vendor) of your proxy
#                              that by default would display "Velocity Contributors."
fallback-version-ping = "{proxy-brand} {protocol-min}-{protocol-max}"

# Replaces what is returned for both the server brand and fallback version pinger.
custom-brand-proxy = "Apiary Proxy"

# Replaces what is returned as the server brand for the user's client.
custom-brand-backend = "Paper"

[slash-servers]
# Defines `/<name>` aliases for servers - here `/faction` and `/factions` would both send you to the server named
# `factions`, for example.
factions = ["faction", "factions"]
minigames = ["minigames", "arcade"]

[query]
# Whether to enable responding to GameSpy 4 query responses or not.
enabled = false

# If query is enabled, on what port should the query protocol listen on?
port = 25565

# This is the map name reported to the query services.
map = "Velocity"

# Whether plugins should be shown in query response by default or not.
show-plugins = false

[redis]
# Should Redis be used to communicate between multiple Velocity proxies?
enabled = false

# What address, port, and other credentials should be used to link all Velocity functions to Redis?
# Leave the username blank if you do not have a defined username for your Redis database.
host = "127.0.0.1"
port = 6379
username = ""
password = ""
use-ssl = false

# Maximum number of maintained connections to the Redis server.
#
# We encourage leaving this at "10," as having an absurd number
# of connections to your Redis instance will massively depreciate performance.
max-concurrent-connections = 10

# The ID of this proxy (only needed for multi-proxy setups - leave blank otherwise)
proxy-id = ""

# How often to send a ping over the Redis.
ping-interval-ms = 30000

# How long until a proxy is marked as being timed out if we don't see a ping from it.
other-proxy-timeout-ms = 90000

[queue]
# Whether the queue system is active or not. This will fully unregister all permissions, commands, and this feature as
# a whole.
enabled = false

# The list of aliases for the `/server` command when the queue system is enabled.
queue-aliases = [
    "joinqueue",
    "queue"
]

# The list of aliases for the `/leavequeue` command. The command will not be registered if this list is empty.
leave-queue-aliases = ["leavequeue", "dequeue"]

# The list of aliases for the `/queueadmin` command. The command will not be registered if this list is empty.
queue-admin-aliases = ["queueadmin", "qadmin"]

# The list of servers that should not have the queue system enabled.
no-queue-servers = [
    "lobby"
]

# Whether the user should be capable of entering multiple queues at once.
allow-multi-queue = false

# Determines which server should be prioritized for action bars and placeholders.
# Options: "first" or "last"
multiple-server-messaging-selection = "last"

# How long the queue system should wait before sending each user to a server (in seconds).
send-delay = 1.0

# How long the queue system should wait before updating or sending a new action bar, chat message, or title/subtitle.
message-delay = 1.0

# How often to ping backend servers to check if they're online.
backend-ping-interval = 1.0

# The number tries should a user be sent to a server before it removes the user from a queue.
max-send-retries = 5

# Whether the player should be removed from their previous queue when switching servers.
remove-player-on-server-switch = true

# Whether the kick message or indicator should be shown when you have failed to queue and join a specific server.
forward-kick-reason = true

# Regexes for reasons the user should be removed from the queue when kicked from their previous server.
kick-reasons-blacklist = [
    "banned", "blacklisted"
]

# Amount of time before a user can be sent to a server, after coming back online.
return-online-send-delay = 0.0

# Whether users can enter a queue that is paused.
allow-paused-queue-joining = false

# Whether users should be automatically sent back to a server when it returns online. This feature only applies when
# enabled. By default, the user is re-added to the queue and must wait the duration before being re-sent to their
# previous destination.
send-all-users-back-when-online = false

# If true, players that are sent via the BungeeCord Messaging channels are queued if the server has queueing enabled.
# If false, they will bypass the queue and be sent directly to the backend.
override-bungee-messaging = true
